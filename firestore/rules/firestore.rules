rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() { return request.auth != null; }
    function isAdmin() { return isAuth() && (request.auth.token.admin == true); }
    function hasRole(r) { return isAuth() && (request.auth.token.role == r); }
    function isSelf(uid) { return isAuth() && request.auth.uid == uid; }

    // users
    match /users/{uid} {
      allow read: if isSelf(uid) || isAdmin();
      allow create: if isSelf(uid);
      allow update: if isSelf(uid) &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'name','email','phone','photoUrl','updatedAt'
        ]);
      allow delete: if isAdmin();
    }

    // drivers
    match /drivers/{uid} {
      allow read: if isSelf(uid) || isAdmin();
      allow update: if isSelf(uid) &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'name','email','phoneNumber','vehicle','photoUrl','updatedAt'
        ]);
      allow create, delete: if isAdmin();
    }

    // trips
    match /trips/{tripId} {
      function isTripActor() {
        return isAuth() && (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.driverId);
      }
      allow read: if isTripActor() || isAdmin();

      // pasajero crea SOLO en pending; sin timestamps de backend
      allow create: if isAuth()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.status == 'pending'
        && !('acceptedAt' in request.resource.data)
        && !('startedAt'  in request.resource.data)
        && !('completedAt' in request.resource.data);

      // backend/admin controla status, tarifas y timestamps
      allow update, delete: if isAdmin();

      // opcional: pasajero SOLO marca cancelRequested; backend hace la cancelaci√≥n real
      allow update: if isAuth()
        && request.resource.data.diff(resource.data).changedKeys().hasOnly(['cancelRequested','updatedAt'])
        && request.resource.data.userId == resource.data.userId
        && request.resource.data.cancelRequested == true;
    }

    // billing y alertas
    match /subscriptions/{sid} {
      allow read: if isSelf(resource.data.uid) || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    match /transactions/{tid} {
      allow read: if isSelf(resource.data.uid) || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    match /alerts/{aid} {
      allow read, create, update, delete: if isAdmin();
    }
  }
}
