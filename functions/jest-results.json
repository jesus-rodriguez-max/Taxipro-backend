{"numFailedTestSuites":5,"numFailedTests":9,"numPassedTestSuites":3,"numPassedTests":18,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":27,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758560003127,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Shared Trips Functionality"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Shared Trips Functionality ✅ Confirmar que un usuario solo accede a trips activos (via reglas de Firestore)","invocations":1,"location":{"column":3,"line":55},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"✅ Confirmar que un usuario solo accede a trips activos (via reglas de Firestore)"},{"ancestorTitles":["Shared Trips Functionality"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: sharedTripsQuery.forEach is not a function\n    at handleStatusChange (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\src\\trips\\updateTripStatus.ts:103:22)\n    at updateTripStatusCallable (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\src\\trips\\updateTripStatus.ts:55:5)\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\shared_trips.spec.ts:84:5)"],"fullName":"Shared Trips Functionality ✅ Confirmar que al finalizar un viaje, el shared trip cambia a active = false","invocations":1,"location":{"column":3,"line":72},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"✅ Confirmar que al finalizar un viaje, el shared trip cambia a active = false"},{"ancestorTitles":["Shared Trips Functionality"],"duration":0,"failureDetails":[{}],"failureMessages":["Error: process.env.GCLOUD_PROJECT is not set.\n    at triggerResource (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\providers\\pubsub.js:100:19)\n    at cloudFunction (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\cloud-functions.js:64:13)\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\shared_trips.spec.ts:109:29)"],"fullName":"Shared Trips Functionality ✅ Confirmar que la función programada elimina o limpia los enlaces expirados","invocations":1,"location":{"column":3,"line":91},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"✅ Confirmar que la función programada elimina o limpia los enlaces expirados"}],"endTime":1758560005733,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mShared Trips Functionality › ✅ Confirmar que al finalizar un viaje, el shared trip cambia a active = false\u001b[39m\u001b[22m\n\n    TypeError: sharedTripsQuery.forEach is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 |\u001b[39m     \u001b[90m// Update shared trip to inactive\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 102 |\u001b[39m     \u001b[36mconst\u001b[39m sharedTripsQuery \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m admin\u001b[33m.\u001b[39mfirestore()\u001b[33m.\u001b[39mcollection(\u001b[32m'shared_trips'\u001b[39m)\u001b[33m.\u001b[39mwhere(\u001b[32m'tripId'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'=='\u001b[39m\u001b[33m,\u001b[39m tripId)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 103 |\u001b[39m     sharedTripsQuery\u001b[33m.\u001b[39mforEach(doc \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m       batch\u001b[33m.\u001b[39mupdate(doc\u001b[33m.\u001b[39mref\u001b[33m,\u001b[39m { active\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat handleStatusChange (\u001b[22m\u001b[2msrc/trips/updateTripStatus.ts\u001b[2m:103:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat updateTripStatusCallable (\u001b[22m\u001b[2msrc/trips/updateTripStatus.ts\u001b[2m:55:5)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/shared_trips.spec.ts\u001b[39m\u001b[0m\u001b[2m:84:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mShared Trips Functionality › ✅ Confirmar que la función programada elimina o limpia los enlaces expirados\u001b[39m\u001b[22m\n\n    process.env.GCLOUD_PROJECT is not set.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 107 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m     \u001b[90m// Run the cleanup function\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 109 |\u001b[39m     \u001b[36mawait\u001b[39m cleanupSharedTrips({} \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m     \u001b[90m// Verify deletion\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 112 |\u001b[39m     \u001b[36mconst\u001b[39m expiredDoc \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m db\u001b[33m.\u001b[39mcollection(\u001b[32m'shared_trips'\u001b[39m)\u001b[33m.\u001b[39mdoc(shareTokenExpired)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat triggerResource (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/providers/pubsub.js\u001b[2m:100:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat cloudFunction (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/cloud-functions.js\u001b[2m:64:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/shared_trips.spec.ts\u001b[39m\u001b[0m\u001b[2m:109:29)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\shared_trips.spec.ts","startTime":1758560003338,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Fare Calculation in requestTrip"],"duration":3,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m89.2\u001b[39m\nReceived: \u001b[31m94\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m4.799999999999997\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m89.2\u001b[39m\nReceived: \u001b[31m94\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m4.799999999999997\u001b[39m\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\fares.spec.ts:55:30)"],"fullName":"Fare Calculation in requestTrip should use baseFareDay and calculate distance cost during daytime (app request)","invocations":1,"location":{"column":3,"line":47},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use baseFareDay and calculate distance cost during daytime (app request)"},{"ancestorTitles":["Fare Calculation in requestTrip"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Fare Calculation in requestTrip should use baseFareNight and calculate distance cost during nighttime (app request)","invocations":1,"location":{"column":3,"line":62},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use baseFareNight and calculate distance cost during nighttime (app request)"},{"ancestorTitles":["Fare Calculation in requestTrip"],"duration":0,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m94\u001b[39m\nReceived: \u001b[31m98.9\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m4.900000000000006\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m94\u001b[39m\nReceived: \u001b[31m98.9\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m4.900000000000006\u001b[39m\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\fares.spec.ts:83:30)"],"fullName":"Fare Calculation in requestTrip should use phoneBaseFareDay during daytime (phone request)","invocations":1,"location":{"column":3,"line":75},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use phoneBaseFareDay during daytime (phone request)"},{"ancestorTitles":["Fare Calculation in requestTrip"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Fare Calculation in requestTrip should use phoneBaseFareNight during nighttime (phone request)","invocations":1,"location":{"column":3,"line":88},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use phoneBaseFareNight during nighttime (phone request)"},{"ancestorTitles":["Fare Calculation in requestTrip"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Fare Calculation in requestTrip should throw an error if no active tariffs are found","invocations":1,"location":{"column":3,"line":101},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error if no active tariffs are found"}],"endTime":1758560006065,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFare Calculation in requestTrip › should use baseFareDay and calculate distance cost during daytime (app request)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m89.2\u001b[39m\n    Received: \u001b[31m94\u001b[39m\n\n    Expected precision:    2\n    Expected difference: < \u001b[32m0.005\u001b[39m\n    Received difference:   \u001b[31m4.799999999999997\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m     \u001b[36mconst\u001b[39m expectedFare \u001b[33m=\u001b[39m mockTariffs\u001b[33m.\u001b[39mbaseFareDay \u001b[33m+\u001b[39m (defaultTripData\u001b[33m.\u001b[39mestimatedDistanceKm \u001b[33m*\u001b[39m mockTariffs\u001b[33m.\u001b[39mperKm)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 55 |\u001b[39m     expect(result\u001b[33m.\u001b[39mtotalFare)\u001b[33m.\u001b[39mtoBeCloseTo(expectedFare)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m     expect(result\u001b[33m.\u001b[39mtripId)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m     \u001b[90m// Restaurar Date original\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/fares.spec.ts\u001b[39m\u001b[0m\u001b[2m:55:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFare Calculation in requestTrip › should use phoneBaseFareDay during daytime (phone request)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m94\u001b[39m\n    Received: \u001b[31m98.9\u001b[39m\n\n    Expected precision:    2\n    Expected difference: < \u001b[32m0.005\u001b[39m\n    Received difference:   \u001b[31m4.900000000000006\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m     \u001b[36mconst\u001b[39m expectedFare \u001b[33m=\u001b[39m mockTariffs\u001b[33m.\u001b[39mphoneBaseFareDay \u001b[33m+\u001b[39m (defaultTripData\u001b[33m.\u001b[39mestimatedDistanceKm \u001b[33m*\u001b[39m mockTariffs\u001b[33m.\u001b[39mperKm)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 |\u001b[39m     expect(result\u001b[33m.\u001b[39mtotalFare)\u001b[33m.\u001b[39mtoBeCloseTo(expectedFare)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m     dateSpy\u001b[33m.\u001b[39mmockRestore()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/fares.spec.ts\u001b[39m\u001b[0m\u001b[2m:83:30)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\fares.spec.ts","startTime":1758560005744,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Trip Disconnection Handling"],"duration":1,"failureDetails":[{}],"failureMessages":["Error: process.env.GCLOUD_PROJECT is not set.\n    at triggerResource (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\providers\\pubsub.js:100:19)\n    at cloudFunction (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\cloud-functions.js:64:13)\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips_disconnection.spec.ts:35:33)"],"fullName":"Trip Disconnection Handling ✅ Simular un viaje activo sin updates y confirmar que se marca como disconnected","invocations":1,"location":{"column":3,"line":30},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"✅ Simular un viaje activo sin updates y confirmar que se marca como disconnected"},{"ancestorTitles":["Trip Disconnection Handling"],"duration":1,"failureDetails":[{}],"failureMessages":["Error: process.env.GCLOUD_PROJECT is not set.\n    at triggerResource (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\providers\\pubsub.js:100:19)\n    at cloudFunction (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\cloud-functions.js:64:13)\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips_disconnection.spec.ts:48:33)"],"fullName":"Trip Disconnection Handling ✅ Confirmar que luego pasa a pending_review","invocations":1,"location":{"column":3,"line":43},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"✅ Confirmar que luego pasa a pending_review"},{"ancestorTitles":["Trip Disconnection Handling"],"duration":0,"failureDetails":[{}],"failureMessages":["Error: process.env.GCLOUD_PROJECT is not set.\n    at triggerResource (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\providers\\pubsub.js:100:19)\n    at cloudFunction (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\cloud-functions.js:64:13)\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips_disconnection.spec.ts:61:33)"],"fullName":"Trip Disconnection Handling ❌ No debe marcar un viaje activo como disconnected si ha sido actualizado recientemente","invocations":1,"location":{"column":3,"line":56},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"❌ No debe marcar un viaje activo como disconnected si ha sido actualizado recientemente"},{"ancestorTitles":["Trip Disconnection Handling"],"duration":0,"failureDetails":[{}],"failureMessages":["Error: process.env.GCLOUD_PROJECT is not set.\n    at triggerResource (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\providers\\pubsub.js:100:19)\n    at cloudFunction (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\firebase-functions\\lib\\v1\\cloud-functions.js:64:13)\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips_disconnection.spec.ts:73:33)"],"fullName":"Trip Disconnection Handling ❌ No debe marcar un viaje disconnected como pending_review si no ha pasado el tiempo suficiente","invocations":1,"location":{"column":3,"line":68},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"❌ No debe marcar un viaje disconnected como pending_review si no ha pasado el tiempo suficiente"}],"endTime":1758560006451,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTrip Disconnection Handling › ✅ Simular un viaje activo sin updates y confirmar que se marca como disconnected\u001b[39m\u001b[22m\n\n    process.env.GCLOUD_PROJECT is not set.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 |\u001b[39m     \u001b[36mawait\u001b[39m createTrip(tripId\u001b[33m,\u001b[39m \u001b[33mTripStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mACTIVE\u001b[39m\u001b[33m,\u001b[39m fiveMinutesAgo)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 35 |\u001b[39m     \u001b[36mawait\u001b[39m checkDisconnectedTrips({} \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m     \u001b[36mconst\u001b[39m updatedTrip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m db\u001b[33m.\u001b[39mcollection(\u001b[32m'trips'\u001b[39m)\u001b[33m.\u001b[39mdoc(tripId)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m     expect(updatedTrip\u001b[33m.\u001b[39mexists)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat triggerResource (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/providers/pubsub.js\u001b[2m:100:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat cloudFunction (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/cloud-functions.js\u001b[2m:64:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/trips_disconnection.spec.ts\u001b[39m\u001b[0m\u001b[2m:35:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTrip Disconnection Handling › ✅ Confirmar que luego pasa a pending_review\u001b[39m\u001b[22m\n\n    process.env.GCLOUD_PROJECT is not set.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 |\u001b[39m     \u001b[36mawait\u001b[39m createTrip(tripId\u001b[33m,\u001b[39m \u001b[33mTripStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDISCONNECTED\u001b[39m\u001b[33m,\u001b[39m sixtyMinutesAgo)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 48 |\u001b[39m     \u001b[36mawait\u001b[39m checkDisconnectedTrips({} \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m     \u001b[36mconst\u001b[39m updatedTrip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m db\u001b[33m.\u001b[39mcollection(\u001b[32m'trips'\u001b[39m)\u001b[33m.\u001b[39mdoc(tripId)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m     expect(updatedTrip\u001b[33m.\u001b[39mexists)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat triggerResource (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/providers/pubsub.js\u001b[2m:100:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat cloudFunction (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/cloud-functions.js\u001b[2m:64:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/trips_disconnection.spec.ts\u001b[39m\u001b[0m\u001b[2m:48:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTrip Disconnection Handling › ❌ No debe marcar un viaje activo como disconnected si ha sido actualizado recientemente\u001b[39m\u001b[22m\n\n    process.env.GCLOUD_PROJECT is not set.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m     \u001b[36mawait\u001b[39m createTrip(tripId\u001b[33m,\u001b[39m \u001b[33mTripStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mACTIVE\u001b[39m\u001b[33m,\u001b[39m oneMinuteAgo)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m     \u001b[36mawait\u001b[39m checkDisconnectedTrips({} \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m     \u001b[36mconst\u001b[39m updatedTrip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m db\u001b[33m.\u001b[39mcollection(\u001b[32m'trips'\u001b[39m)\u001b[33m.\u001b[39mdoc(tripId)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m     expect(updatedTrip\u001b[33m.\u001b[39mexists)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat triggerResource (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/providers/pubsub.js\u001b[2m:100:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat cloudFunction (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/cloud-functions.js\u001b[2m:64:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/trips_disconnection.spec.ts\u001b[39m\u001b[0m\u001b[2m:61:33)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTrip Disconnection Handling › ❌ No debe marcar un viaje disconnected como pending_review si no ha pasado el tiempo suficiente\u001b[39m\u001b[22m\n\n    process.env.GCLOUD_PROJECT is not set.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 |\u001b[39m     \u001b[36mawait\u001b[39m createTrip(tripId\u001b[33m,\u001b[39m \u001b[33mTripStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDISCONNECTED\u001b[39m\u001b[33m,\u001b[39m thirtyMinutesAgo)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 73 |\u001b[39m     \u001b[36mawait\u001b[39m checkDisconnectedTrips({} \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m     \u001b[36mconst\u001b[39m updatedTrip \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m db\u001b[33m.\u001b[39mcollection(\u001b[32m'trips'\u001b[39m)\u001b[33m.\u001b[39mdoc(tripId)\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m     expect(updatedTrip\u001b[33m.\u001b[39mexists)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat triggerResource (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/providers/pubsub.js\u001b[2m:100:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat cloudFunction (\u001b[22m\u001b[2mnode_modules/firebase-functions/lib/v1/cloud-functions.js\u001b[2m:64:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/trips_disconnection.spec.ts\u001b[39m\u001b[0m\u001b[2m:73:33)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips_disconnection.spec.ts","startTime":1758560006087,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Trip Functions","requestTrip"],"duration":1,"failureDetails":[{"code":"invalid-argument","httpErrorCode":{"canonicalName":"INVALID_ARGUMENT","status":400}}],"failureMessages":["Error: Missing origin, destination, or estimatedDistanceKm.\n    at requestTripCallable (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\src\\trips\\requestTrip.ts:17:11)\n    at C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips.spec.ts:16:77\n    at Object.<anonymous> (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips.spec.ts:52:28)\n    at Promise.then.completed (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\ecositema-taxipro\\Taxipro-backend\\functions\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Trip Functions requestTrip should create a new trip","invocations":1,"location":{"column":5,"line":46},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create a new trip"},{"ancestorTitles":["Trip Functions","acceptTrip"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Trip Functions acceptTrip should accept a trip successfully","invocations":1,"location":{"column":5,"line":61},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should accept a trip successfully"},{"ancestorTitles":["Trip Functions","updateTripStatus"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Trip Functions updateTripStatus should update trip status to active","invocations":1,"location":{"column":5,"line":76},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update trip status to active"}],"endTime":1758560006725,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTrip Functions › requestTrip › should create a new trip\u001b[39m\u001b[22m\n\n    Missing origin, destination, or estimatedDistanceKm.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39morigin \u001b[33m||\u001b[39m \u001b[33m!\u001b[39mdestination \u001b[33m||\u001b[39m \u001b[36mtypeof\u001b[39m estimatedDistanceKm \u001b[33m!==\u001b[39m \u001b[32m'number'\u001b[39m) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m     \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m https\u001b[33m.\u001b[39m\u001b[33mHttpsError\u001b[39m(\u001b[32m'invalid-argument'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Missing origin, destination, or estimatedDistanceKm.'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m   }\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   \u001b[36mconst\u001b[39m firestore \u001b[33m=\u001b[39m getFirestore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat requestTripCallable (\u001b[22m\u001b[2msrc/trips/requestTrip.ts\u001b[2m:17:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/trips.spec.ts\u001b[39m\u001b[0m\u001b[2m:16:77\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/trips.spec.ts\u001b[39m\u001b[0m\u001b[2m:52:28)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\trips.spec.ts","startTime":1758560006465,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Stripe Webhook"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Stripe Webhook should handle a valid event","invocations":1,"location":{"column":3,"line":17},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle a valid event"},{"ancestorTitles":["Stripe Webhook"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Stripe Webhook should handle an invalid signature","invocations":1,"location":{"column":3,"line":32},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle an invalid signature"},{"ancestorTitles":["Stripe Webhook"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Stripe Webhook ✅ payment_failed → el viaje cambia a PAYMENT_FAILED","invocations":1,"location":{"column":3,"line":43},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"✅ payment_failed → el viaje cambia a PAYMENT_FAILED"},{"ancestorTitles":["Stripe Webhook"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Stripe Webhook ✅ charge.refunded → el viaje cambia a REFUNDED","invocations":1,"location":{"column":3,"line":68},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"✅ charge.refunded → el viaje cambia a REFUNDED"}],"endTime":1758560007165,"message":"","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\stripe_webhook.spec.ts","startTime":1758560006733,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["submitRating Callable Function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"submitRating Callable Function ✅ Pasajero califica un viaje completado → éxito","invocations":1,"location":{"column":3,"line":45},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"✅ Pasajero califica un viaje completado → éxito"},{"ancestorTitles":["submitRating Callable Function"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"submitRating Callable Function ❌ Pasajero intenta calificar un viaje no completado → error","invocations":1,"location":{"column":3,"line":71},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"❌ Pasajero intenta calificar un viaje no completado → error"},{"ancestorTitles":["submitRating Callable Function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"submitRating Callable Function ❌ Pasajero intenta calificar un trip que no es suyo → error","invocations":1,"location":{"column":3,"line":83},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"❌ Pasajero intenta calificar un trip que no es suyo → error"},{"ancestorTitles":["submitRating Callable Function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"submitRating Callable Function ❌ Pasajero intenta calificar dos veces el mismo trip → error","invocations":1,"location":{"column":3,"line":97},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"❌ Pasajero intenta calificar dos veces el mismo trip → error"},{"ancestorTitles":["submitRating Callable Function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"submitRating Callable Function ❌ Usuario no autenticado no puede crear ratings → error","invocations":1,"location":{"column":3,"line":115},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"❌ Usuario no autenticado no puede crear ratings → error"}],"endTime":1758560007401,"message":"","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\ratings.spec.ts","startTime":1758560007181,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Geo Library"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Geo Library should calculate the distance between two points correctly","invocations":1,"location":{"column":3,"line":9},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate the distance between two points correctly"},{"ancestorTitles":["Geo Library"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Geo Library should return true if a point is within the geofence","invocations":1,"location":{"column":3,"line":14},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true if a point is within the geofence"},{"ancestorTitles":["Geo Library"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Geo Library should return false if a point is outside the geofence","invocations":1,"location":{"column":3,"line":18},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false if a point is outside the geofence"}],"endTime":1758560007523,"message":"","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\geo.spec.ts","startTime":1758560007408,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1758560007672,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/lib/state.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2740: \u001b[0mType '{ pending: TripStatus.ASSIGNED[]; assigned: (TripStatus.ACTIVE | TripStatus.CANCELLED)[]; active: (TripStatus.COMPLETED | TripStatus.CANCELLED)[]; completed: never[]; cancelled: never[]; disconnected: TripStatus.PENDING_REVIEW[]; pending_review: never[]; }' is missing the following properties from type 'Record<TripStatus, TripStatus[]>': arrived, cancelled_by_passenger, cancelled_by_driver, cancelled_with_penalty, and 3 more.\n\n    \u001b[7m3\u001b[0m const validTransitions: Record<TripStatus, TripStatus[]> = {\n    \u001b[7m \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\ecositema-taxipro\\Taxipro-backend\\functions\\tests\\state.spec.ts","startTime":1758560007672,"status":"failed","summary":""}],"wasInterrupted":false}
